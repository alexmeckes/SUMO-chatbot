{
  "slug": "ohttp-explained",
  "title": "Oblivious HTTP (OHTTP) explained",
  "summary": "One of the technologies used in Firefox to enhance online privacy is Oblivious HTTP (OHTTP). Learn what it is, how it works and how it helps protect your data.",
  "url": "https://support.mozilla.org/en-US/kb/ohttp-explained",
  "html": "<p></p><div class=\"note\"> \n<p><span class=\"for\" data-for=\"fx\"><img alt=\"progressive rollout banner\" class=\"wiki-image frameless lazy\" data-original-src=\"https://assets-prod.sumo.prod.webservices.mozgcp.net/media/uploads/gallery/images/2025-01-28-12-46-04-f31ad5.png\" src=\"https://assets-prod.sumo.prod.webservices.mozgcp.net/static/placeholder.688345f843bb37ed.gif\" title=\"\"></span>\nFirefox handles data with transparency—learn more about what that means for you. <a href=\"https://www.mozilla.org/privacy/firefox/\">Read the Firefox Privacy Notice</a>.\n</p>\n</div>\nMozilla is committed to protecting your privacy and keeping your online experience secure. One of the technologies used in Firefox to enhance online privacy is <strong>Oblivious HTTP (OHTTP)</strong>. This article explains what OHTTP is, how it works, and how it helps protect your data.\n<p></p>\n<div id=\"toc\"><h2>Table of Contents</h2><ul><li class=\"toclevel-1\"><a href=\"#w_what-is-oblivious-http\"><span class=\"tocnumber\">1</span> <span class=\"toctext\">What is Oblivious HTTP?</span></a></li><li class=\"toclevel-1\"><a href=\"#w_how-does-ohttp-work\"><span class=\"tocnumber\">2</span> <span class=\"toctext\">How does OHTTP work?</span></a></li><li class=\"toclevel-1\"><a href=\"#w_how-does-mozilla-utilize-ohttp-for-your-benefit\"><span class=\"tocnumber\">3</span> <span class=\"toctext\">How does Mozilla utilize OHTTP for your benefit?</span></a><ul><li class=\"toclevel-2\"><a href=\"#w_what-does-this-mean-for-you\"><span class=\"tocnumber\">3.1</span> <span class=\"toctext\">What does this mean for you?</span></a></li></ul></li><li class=\"toclevel-1\"><a href=\"#w_related-resources\"><span class=\"tocnumber\">4</span> <span class=\"toctext\">Related resources</span></a></li></ul></div>\n<h1 id=\"w_what-is-oblivious-http\">What is Oblivious HTTP?</h1>\n<p>OHTTP is a technology designed to make online requests more private by separating who is making a request from the content of the request itself. This helps ensure that when you access certain online services, your personal identity and browsing habits are better protected.\n</p><p>When you visit a website or Firefox connects to a server, your request – such as loading a web page or submitting information – includes details like your <a href=\"https://wikipedia.org/wiki/IP_address\">IP address</a>.\n</p><p>This IP address can reveal your approximate location and be used to track your activity across multiple requests. Over time, this information could be combined to create a profile of your browsing habits.\n</p><p>OHTTP helps reduce this kind of tracking by ensuring that no single server sees both who you are and what you’re requesting.\n</p>\n<h1 id=\"w_how-does-ohttp-work\">How does OHTTP work?</h1>\n<p>OHTTP enhances privacy by encrypting your request and sending it through a relay server, which removes identifying information before forwarding it. This prevents websites from linking your identity to your activity. Here’s how it works:\n</p>\n<ul><li><strong>Encryption:</strong> Your browser encrypts the request using the destination server’s public key. This ensures that only the destination can read the request.\n</li><li><strong>Relay server:</strong> Instead of going directly to the website, your request first passes through a relay server. The relay strips your IP address and other metadata before forwarding the request. Since it’s encrypted, the relay can’t read its contents.\n</li><li><strong>Destination server:</strong> The destination decrypts the request but never sees your IP address. It processes the request and sends an encrypted response back through the relay.\n</li></ul>\n<p>The following diagram breaks down the encrypted request and response flow in OHTTP, showing how data moves between the client, relay and destination server.\n<img alt=\"Diagram\" class=\"wiki-image frameless lazy\" data-original-src=\"https://assets-prod.sumo.prod.webservices.mozgcp.net/media/uploads/gallery/images/2025-02-26-06-40-25-e410e8.png\" src=\"https://assets-prod.sumo.prod.webservices.mozgcp.net/static/placeholder.688345f843bb37ed.gif\" title=\"\">\nThis creates a <strong>separation of roles</strong>, where the relay server and the destination server work together without sharing the same information. The relay server forwards your request without knowing its contents, while the destination server processes the request without knowing who sent it.\n</p><p>At no point does a single server have access to both your identity and your request. Because of this design, services that use OHTTP add an extra layer of privacy – even from the servers handling your data.\n</p>\n<h1 id=\"w_how-does-mozilla-utilize-ohttp-for-your-benefit\">How does Mozilla utilize OHTTP for your benefit?</h1>\n<p>Oblivious HTTP can be particularly useful for services that require privacy, such as gathering deidentified usage statistics or protecting sensitive requests.\n</p><p>For example, when you are shopping on the internet, Firefox can utilize our ReviewChecker service to help determine whether a product’s ratings are genuine. OHTTP ensures that Firefox can analyze this information without revealing what you are shopping for.\n</p><p>The service only sees the product being checked, not who is checking it.\n</p><p>Another example is “Oblivious <a href=\"/en-US/kb/dns-over-https-doh-faqs\">DNS over HTTPS</a>” (oDoH). Firefox already uses DoH to encrypt DNS requests instead of relying on your ISP’s DNS server.\n</p><p>With oDoH, an OHTTP relay adds even more privacy:\n</p>\n<ul><li>The <strong>relay</strong> knows who is making the request but not the website being accessed.\n</li><li>The <strong>DoH server</strong> knows the website but not who requested it.\n</li></ul>\n<p>This separation ensures that no single server can track both your identity and your browsing activity.\n</p>\n<h2 id=\"w_what-does-this-mean-for-you\">What does this mean for you?</h2>\n<p>As a Firefox user, you don’t need to take any action to benefit from OHTTP. This service runs in the background when enabled, adding an extra layer of privacy to certain services. OHTTP is not a setting that you can turn on or off; instead, it is automatically used when a service is set up to support it.\n</p><p>Mozilla supports an open, secure and privacy-respecting internet, as outlined in the <a href=\"https://www.mozilla.org/about/manifesto/\">Mozilla Manifesto</a>. Technologies like Oblivious HTTP (OHTTP) help minimize tracking and give users more control over their data. For details on how data is handled, see the <a href=\"https://www.mozilla.org/privacy/\">Mozilla Privacy Notice</a>.\n</p>\n<h1 id=\"w_related-resources\">Related resources</h1>\n<ul><li><a href=\"https://www.ietf.org/rfc/rfc9458.html\">RFC 9458: Oblivious HTTP</a>\n</li></ul>",
  "text": "Firefox handles data with transparency—learn more about what that means for you. Read the Firefox Privacy Notice . Mozilla is committed to protecting your privacy and keeping your online experience secure. One of the technologies used in Firefox to enhance online privacy is Oblivious HTTP (OHTTP) . This article explains what OHTTP is, how it works, and how it helps protect your data. Table of Contents 1 What is Oblivious HTTP? 2 How does OHTTP work? 3 How does Mozilla utilize OHTTP for your benefit? 3.1 What does this mean for you? 4 Related resources What is Oblivious HTTP? OHTTP is a technology designed to make online requests more private by separating who is making a request from the content of the request itself. This helps ensure that when you access certain online services, your personal identity and browsing habits are better protected. When you visit a website or Firefox connects to a server, your request – such as loading a web page or submitting information – includes details like your IP address . This IP address can reveal your approximate location and be used to track your activity across multiple requests. Over time, this information could be combined to create a profile of your browsing habits. OHTTP helps reduce this kind of tracking by ensuring that no single server sees both who you are and what you’re requesting. How does OHTTP work? OHTTP enhances privacy by encrypting your request and sending it through a relay server, which removes identifying information before forwarding it. This prevents websites from linking your identity to your activity. Here’s how it works: Encryption: Your browser encrypts the request using the destination server’s public key. This ensures that only the destination can read the request. Relay server: Instead of going directly to the website, your request first passes through a relay server. The relay strips your IP address and other metadata before forwarding the request. Since it’s encrypted, the relay can’t read its contents. Destination server: The destination decrypts the request but never sees your IP address. It processes the request and sends an encrypted response back through the relay. The following diagram breaks down the encrypted request and response flow in OHTTP, showing how data moves between the client, relay and destination server. This creates a separation of roles , where the relay server and the destination server work together without sharing the same information. The relay server forwards your request without knowing its contents, while the destination server processes the request without knowing who sent it. At no point does a single server have access to both your identity and your request. Because of this design, services that use OHTTP add an extra layer of privacy – even from the servers handling your data. How does Mozilla utilize OHTTP for your benefit? Oblivious HTTP can be particularly useful for services that require privacy, such as gathering deidentified usage statistics or protecting sensitive requests. For example, when you are shopping on the internet, Firefox can utilize our ReviewChecker service to help determine whether a product’s ratings are genuine. OHTTP ensures that Firefox can analyze this information without revealing what you are shopping for. The service only sees the product being checked, not who is checking it. Another example is “Oblivious DNS over HTTPS ” (oDoH). Firefox already uses DoH to encrypt DNS requests instead of relying on your ISP’s DNS server. With oDoH, an OHTTP relay adds even more privacy: The relay knows who is making the request but not the website being accessed. The DoH server knows the website but not who requested it. This separation ensures that no single server can track both your identity and your browsing activity. What does this mean for you? As a Firefox user, you don’t need to take any action to benefit from OHTTP. This service runs in the background when enabled, adding an extra layer of privacy to certain services. OHTTP is not a setting that you can turn on or off; instead, it is automatically used when a service is set up to support it. Mozilla supports an open, secure and privacy-respecting internet, as outlined in the Mozilla Manifesto . Technologies like Oblivious HTTP (OHTTP) help minimize tracking and give users more control over their data. For details on how data is handled, see the Mozilla Privacy Notice . Related resources RFC 9458: Oblivious HTTP",
  "products": [
    "firefox",
    "mobile",
    "ios"
  ],
  "topics": [
    "encryption",
    "privacy-and-security",
    "tracking-protection"
  ],
  "locale": "en-US",
  "metadata": {
    "html_bytes": 6705,
    "text_bytes": 4470,
    "word_count": 731,
    "downloaded_at": "2025-08-26T10:59:29.983964"
  }
}